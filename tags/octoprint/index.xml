<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Octoprint on 楽しいことしかやりたくない。</title>
    <link>https://m0a.github.io/tags/octoprint/</link>
    <description>Recent content in Octoprint on 楽しいことしかやりたくない。</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 28 Mar 2017 23:12:01 +0900</lastBuildDate>
    
	<atom:link href="https://m0a.github.io/tags/octoprint/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>octoprintをbitbarを使って便利にしよう</title>
      <link>https://m0a.github.io/post/octoprint001/</link>
      <pubDate>Tue, 28 Mar 2017 23:12:01 +0900</pubDate>
      
      <guid>https://m0a.github.io/post/octoprint001/</guid>
      <description>octoprintを便利に使うためにbitbarのプラグインを作りました。 多分linux環境(Gnome環境？)でも、
argosなどで使えると思います
見ての通りbitbarとはメニューバーを簡単に拡張できる機能のことです。 mac限定なのが悲しい。
こちらにプラグインへのリンクを置きますね。
https://getbitbar.com/plugins/Tools/octoprint.1m.sh</description>
    </item>
    
    <item>
      <title>octoprintのタイムラプスをstreamableに自動アップロード</title>
      <link>https://m0a.github.io/post/up2streamable001/</link>
      <pubDate>Tue, 28 Feb 2017 15:07:34 +0900</pubDate>
      
      <guid>https://m0a.github.io/post/up2streamable001/</guid>
      <description>octoprintをつかってタイムラプスを取るのは楽しいですが、
どうにもサイズがでかいのでSDカードを逼迫するような気もします。
ところでstreamableってサービスをご存知でしょうか？
imgurの動画版みたいなやつです。
とりあえず動画をアップして共有しようというサービスです。
そこでこいつに自動アップロードする機能をoctoprintにつけられないかな？と思いました。
作りました。
golangのライブラリが提供されていたのでアホみたいに簡単なので、 正直ツール化する意味はあるのかという気もしますが。
先ずはstreamable/signupからアカントを作っておきます。
そうしないと削除できないので。
octoprintが動いているサーバ(raspberypiかorangepi等のarm環境限定です)から以下のコマンドで取得します
またoctoprintを動かすユーザはoctoprintだと仮定しています
sudo su - octoprint cd ~/bin wget https://github.com/m0a/up2streamable/releases/download/0.1/up2streamable chmod +x up2streamable  以下のコマンドを実行します
up2streamable -path ~/.octoprint/timelapse -u userid -p password  ~/.octoprint/timelapseに動画が格納されていればuploadが成功します
成功したらcronで設定しておきます。
 HOME=/home/octoprint */15 * * * * $HOME/bin/up2streamable -path $HOME/.octoprint/timelapse -u username -p password -delete  以上です。オプションに -deleteを指定することで自動削除します。
 </description>
    </item>
    
    <item>
      <title>OrangePi liteをつかってプリンタにwifi機能をつけよう(Ansible使って自動化するよ)</title>
      <link>https://m0a.github.io/post/orange-pi-lite/</link>
      <pubDate>Thu, 03 Nov 2016 14:45:15 +0900</pubDate>
      
      <guid>https://m0a.github.io/post/orange-pi-lite/</guid>
      <description>OrangePi Liteを買いました。名刺サイズながら最初からWifiが搭載されているやつです。
早速wifiを有効化させるところまで纏めましたが、Qiitaではいまいち人気がない様子。
気を取り直して、当初の目的であるOctoPrintを導入します。 ラズパイみたいな人気のやつの場合は最初からOctoPiというのがありまして SDカードにイメージを入れるだけで全部入りの環境が手に入ります。
でもこいつは安いのが魅力。本体だけなら1200円くらいです。
OctoPiほどではないけどAnsibleをつかって全自動で構築まで持っていきましょう。 仮にSDが壊れても瞬時に復旧できるように。
Ansibleって 自分のPCからOrangePiにsshアクセスして自動で必要なコマンドやファイルコピーを行って 環境を自動構築してくれるツールです。こいつを使えば、SDにイメージを焼く程にすぐには出来ませんが
待ってれば環境を作ってくれます。
wifiの設定までは自動化出来ず。 ということで少なくともssh接続できるように
wifi経由でsshできる状態まで設定しておく必要があります。
その手順はQiitaに纏めましたのでご参照下さい
OrangePi LiteのWIFI設定(armbian)
固定Ipを使ったほうがいいでしょうね。
Ansibleの準備 macであればbrewコマンドで簡単にインストールできます。 windowsの場合も最近はlinux環境があるそうなんで簡単じゃないでしょうか？ macなら以下で入ると思います。
 brew install ansible  windowsは自分で調べて下さい。ubuntu環境を手元に作れるはずです。
構築開始 必要なファイルをgitで取得します。
 ❯ git clone https://github.com/m0a/octoprint_armbian.git ❯ cd octoprint_armbian  接続するときのipを設定します
 ❯ cat hosts [octoprint_server] 192.168.11.111  ここを自分の設定したOrangePiのipに変えて下さい
sudo時のパスワードを設定しておきます。
 ❯ cat group_vars/octoprint_server.yml ansible_sudo_pass: p@ssword octoprint_version: 1.2.17 ....... %  p@sswordのところを適時変えて下さい
後はオプションでバージョンの変更をして下さい(octoprint_versionにTagを指定できます。)
コレで構築開始です。
 ❯ ansible-playbook -i hosts playbook.</description>
    </item>
    
  </channel>
</rss>