<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marlin Firmware on 楽しいことしかやりたくない。</title>
    <link>https://m0a.github.io/tags/marlin-firmware/</link>
    <description>Recent content in Marlin Firmware on 楽しいことしかやりたくない。</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 18 Oct 2016 20:22:31 +0900</lastBuildDate>
    
	<atom:link href="https://m0a.github.io/tags/marlin-firmware/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Marlinを改造して残り時間を表示させたい</title>
      <link>https://m0a.github.io/post/modify_marlin/</link>
      <pubDate>Tue, 18 Oct 2016 20:22:31 +0900</pubDate>
      
      <guid>https://m0a.github.io/post/modify_marlin/</guid>
      <description>同じことを考えている人はいる。
Display time remaining on the LCD screen ?
SDカードの読み取り状況と現状の印刷時間から逆算する方針なら情報は出揃っているから簡単でした。
実装結果 Marlinのコードはこちらにあります。 flyingbearP902用の設定になっています https://github.com/m0a/flyingbearMarlin/archive/lcd_kai.zip
実際のところSDカードの進捗は正確ではなくコレを元に印刷時間を表示するとあまり正確な値にならない。
ただ後半90%以上進行するとまぁまぁ正確にはなる(当たり前か)
M73というGCODEをMarlinに実装すると正確になるかもしれない。
変更内容 ちょっとテスト的に弄ったものも含まれています。
あと中華ArduinoだったせいかBAUDRATEも25000では上手く動かず115200に変更しています
diff --git a/Marlin/Configuration.h b/Marlin/Configuration.h index ad869b7..a730543 100644 --- a/Marlin/Configuration.h +++ b/Marlin/Configuration.h @@ -113,7 +113,7 @@ // This determines the communication speed of the printer // :[2400,9600,19200,38400,57600,115200,250000] -#define BAUDRATE 250000 +#define BAUDRATE 115200 // Enable the Bluetooth serial interface on AT90USB devices //#define BLUETOOTH @@ -126,7 +126,7 @@ // Optional custom name for your RepStrap or other custom machine // Displayed in the LCD &amp;quot;Ready&amp;quot; message -//#define CUSTOM_MACHINE_NAME &amp;quot;3D Printer&amp;quot; +#define CUSTOM_MACHINE_NAME &amp;quot;Flyingbear&amp;quot; // Define this to set a unique identifier for this printer, (Used by some programs to differentiate between machines) // You can use an online service to generate a random UUID.</description>
    </item>
    
  </channel>
</rss>